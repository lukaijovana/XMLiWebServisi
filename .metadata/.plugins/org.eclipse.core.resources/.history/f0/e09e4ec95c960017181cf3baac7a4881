package centralnaBankaApp;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ws.server.endpoint.annotation.Endpoint;
import org.springframework.ws.server.endpoint.annotation.PayloadRoot;
import org.springframework.ws.server.endpoint.annotation.RequestPayload;
import org.springframework.ws.server.endpoint.annotation.ResponsePayload;

import rs.ac.uns.ftn.informatika.domen.BankarskiNalogEntity;
import rs.ac.uns.ftn.informatika.bankarskinalog.KreirajZahtevBnkNalog;
import rs.ac.uns.ftn.informatika.bankarskinalog.KreirajOdgBnkNalog;
import rs.ac.uns.ftn.informatika.bankarskinalog.GetNalogBankeRequest;
import rs.ac.uns.ftn.informatika.bankarskinalog.GetNalogBankeResponse;
import rs.ac.uns.ftn.informatika.bankarskinalog.NalogBanke;

@Endpoint
public class CreateNalogBankeEndPoint {
	private static final String NAMESPACE_URI = "http://www.informatika.ftn.uns.ac.rs/nalogBanke";
	private NalogBankeService nalogBankeService;
	@Autowired
	public CreateNalogBankeEndPoint(NalogBankeServiceImpl nalogBankeService) {
		this.nalogBankeService = nalogBankeService;
	}
	

	@PayloadRoot(namespace = NAMESPACE_URI, localPart = "createNalogBankeRequest")
	@ResponsePayload
	public KreirajOdgBnkNalog getNalogZaPrenosRequest(@RequestPayload KreirajZahtevBnkNalog request) {
		KreirajOdgBnkNalog response = new KreirajOdgBnkNalog();
		BankarskiNalogEntity nIn = new BankarskiNalogEntity(request.getNalogBanke());
		nalogBankeService.save(nIn);
		return response;
	}
	
	@PayloadRoot(namespace = NAMESPACE_URI, localPart = "getNalogBankeRequest")
	@ResponsePayload
	public GetNalogBankeResponse getNalogBankeRequest(@RequestPayload GetNalogBankeRequest request) {
		GetNalogBankeResponse response = new GetNalogBankeResponse();
		System.out.println("tuuuu");
		List<BankarskiNalogEntity> nalozi = nalogBankeService.findAll();
		BankarskiNalogEntity nalog = null;
		for(BankarskiNalogEntity nal: nalozi) {
			if(nal.getSifraBanke().equals(request.getPortBanke())) {
				nalog = nal;
				break;
			}
		}
		NalogBanke nb = new NalogBanke();
		nb.setObracunskiRacun(nalog.getObracunskiRacun());
		nb.setPort(nalog.getPort());
		nb.setSifraBanke(nalog.getSifraBanke());
		nb.setStanjeNaRacunu(nalog.getStanjeNaRacunu());
		nb.setSWIFT(nalog.getSWIFT());

		response.setNalogBanke(nb);
		return response;
	}
}
